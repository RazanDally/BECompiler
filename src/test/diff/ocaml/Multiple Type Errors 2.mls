 (* example 1 - tuple field types mismatch *)
 let parse_version (s: string): string = 
  (* Dummy implementation that just returns the input string *)
  s;;
//│ /!\ Parse error: Expected "=":1:75, found ": string =" at l.2:30: let parse_version (s: string): string = 

let show_major (s: string): string =
  (* Dummy implementation that returns a string indicating major version *)
  "Major version: " ^ s;;
//│ /!\ Parse error: Expected "=":1:27, found ": string =" at l.6:27: let show_major (s: string): string =

let appInfo = ("My Application", 1.5);;
//│ appInfo: (string, float,)

let process (name, vers) = name ^ show_major (parse_version vers);;
//│ [ERROR] Type `err` does not match `_ -> _`
//│ 
//│	(err) ---> (_ -> _)
//│ 
//│ ◉ (err) comes from
//│ │  - l.12 let process (name, vers) = name ^ show_major (parse_version vers);;
//││                                                       ^^^^^^^^^^^^^

//│ ▼ 
//│ ◉ (_ -> _) comes from
//│    - l.12 let process (name, vers) = name ^ show_major (parse_version vers);;
//│                                                        ^^^^^^^^^^^^^

//│ [ERROR] Type `err` does not match `_ -> _`
//│ 
//│	(err) ---> (_ -> _)
//│ 
//│ ◉ (err) comes from
//│ │  - l.12 let process (name, vers) = name ^ show_major (parse_version vers);;
//││                                           ^^^^^^^^^^

//│ ▼ 
//│ ◉ (_ -> _) comes from
//│    - l.12 let process (name, vers) = name ^ show_major (parse_version vers);;
//│                                            ^^^^^^^^^^

//│ ╔══[ERROR] identifier not found: show_major
//│ ║  
//│ ║  l.12:	let process (name, vers) = name ^ show_major (parse_version vers);;
//│ ╙──     	                                  ^^^^^^^^^^

//│ ╔══[ERROR] identifier not found: parse_version
//│ ║  
//│ ║  l.12:	let process (name, vers) = name ^ show_major (parse_version vers);;
//│ ╙──     	                                              ^^^^^^^^^^^^^

//│ process: (string, 'a,) -> string
//│ U max: 1, total: 4
//│ UERR 2 errors
//│ L: 0 [err ~ ([α43'] -> α44'), err <: ([α43'] -> α44')]
//│ L: 0 [err ~ (α44' -> α45'), err <: (α44' -> α45')]

5;appInfo;;
let x = 5;;
//│ res: int
//│ res: (string, float,)
//│ x: int

let test = process appInfo;;
let test = process ("My Application", "1.5");;
print_int 5;;
let test = process ("My Application", "1.5");;
let test = process appInfo2;;
print_int x;;
//│ [ERROR] Type `err` does not match `_ * _`
//│ 
//│	(err) ---> (_ * _)
//│ 
//│ ◉ (err) comes from
//│ │  - l.21 let test = process appInfo2;;
//││                            ^^^^^^^^

//│ ▼ 
//│ ◉ (_ * _) comes from
//│    - l.12 let process (name, vers) = name ^ show_major (parse_version vers);;
//│                      ^^^^^^^^^^^^

//│ test: string
//│ test: string
//│ test: string
//│ ╔══[ERROR] identifier not found: appInfo2
//│ ║  
//│ ║  l.21:	let test = process appInfo2;;
//│ ╙──     	                   ^^^^^^^^

//│ test: string
//│ U max: 2, total: 12
//│ UERR 1 errors
//│ L: 0 [err ~ ([α52'], [α53'],), err <: ([α52'], [α53'],)]

let () = print_int 5;;
//│ /!\ Parse error: Expected (filter | "(" ~ ocamlOps):1:5, found "() = print" at l.24:5: let () = print_int 5;;

if x < 4 then
  let () = print_int 5 
  print_string "hello"
else
  print_string "world";;
//│ /!\ Parse error: Expected "in":3:23, found ";else\n  pr" at l.28:23:   print_string "hello"